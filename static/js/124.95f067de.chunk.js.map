{"version":3,"file":"static/js/124.95f067de.chunk.js","mappings":"mQAmCA,EA9BmB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACpB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAmBC,GAAnB,WAiBA,OACE,kBAAML,SAjBa,SAAAM,GACnBA,EAAEC,iBACFJ,EAAQD,GAERG,EAAgB,CAAEG,MAAON,IACZ,KAATA,GACFO,EAAAA,GAAAA,MAAY,8BAGdT,EAASE,IAQqBQ,UAAU,OAAxC,WACE,kBAAOC,SANU,SAAAL,GACnBH,EAAQG,EAAEM,OAAOC,WAMf,mBAAQC,KAAK,SAASJ,UAAU,cAAhC,wB,oBCsCN,EAzDmB,WACjB,OAAwBT,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOc,EAAP,KAAcC,EAAd,KACA,GAA4Bf,EAAAA,EAAAA,UAAS,QAArC,eAAOgB,EAAP,KAAeC,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,2FACED,EAAU,WADZ,mBAGwBE,EAAAA,EAAAA,IAAWlB,GAHnC,UAIyB,KADfa,EAHV,QAIcM,OAJd,uBAKMH,EAAU,YALhB,kBAMaT,EAAAA,GAAAA,MAAY,yCANzB,OAQIO,EAASD,GARb,kDAUIG,EAAU,YAVd,QAYEA,EAAU,YAZZ,2DAJc,sBACD,KAAThB,GADU,mCAkBdoB,KACC,CAACpB,IAOJ,MAAe,YAAXe,GACK,SAAC,KAAD,IAEM,aAAXA,EACKR,EAAAA,GAAAA,MAAY,0BAInB,iBAAKC,UAAU,iBAAf,WACE,SAAC,EAAD,CAAYV,SAdK,SAAAE,GACnBqB,QAAQC,IAAItB,GACZC,EAAQD,OAaN,eAAIQ,UAAU,cAAd,SACc,aAAXO,GACCF,EAAMU,KAAI,SAAAvB,GACR,OACE,eAAkBQ,UAAU,cAA5B,UACE,SAAC,KAAD,CAAMgB,GAAE,UAAKxB,EAAKyB,IAAMjB,UAAU,cAAlC,SACGR,EAAK0B,SAFD1B,EAAKyB,c,0MCpD5BE,IAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAU,mCAEVV,EAAU,mCAAG,WAAMZ,GAAN,uFACMqB,IAAAA,IAAA,+BACGC,EADH,kBACoBtB,EADpB,+CADN,cACXuB,EADW,yBAIVA,EAASC,KAAKC,SAJJ,2CAAH,sDAOVC,EAAoB,mCAAG,oGACJL,IAAAA,IAAA,qCAAwCC,IADpC,cACrBC,EADqB,OAE3BR,QAAQC,IAAIO,GAFe,kBAGpBA,EAASC,KAAKC,SAHM,2CAAH,qDAMpBE,EAAmB,mCAAG,WAAMC,GAAN,uFACHP,IAAAA,IAAA,gBACZO,EADY,oBACON,EADP,oBADG,cACpBC,EADoB,yBAInBA,EAASC,MAJU,2CAAH,sDAOnBK,EAAmB,mCAAG,WAAMC,GAAN,uFACHT,IAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADG,cACpBC,EADoB,yBAKnBA,EAASC,KAAKO,MALK,2CAAH,sDAQnBC,EAAc,mCAAG,WAAMF,GAAN,uFACET,IAAAA,IAAA,gBACZS,EADY,4BACeR,EADf,oBADF,cACfC,EADe,OAIrBR,QAAQC,IAAIO,GAJS,kBAKdA,EAASC,KAAKC,SALA,2CAAH","sources":["components/MoviesForm/MoviesForm.js","components/MoviesPage/MoviesPage.js","services/API.js"],"sourcesContent":["import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport '../../css/MoviesForm.modules.css';\n\nconst MoviesForm = ({ onSubmit }) => {\n  const [film, setFilm] = useState('');\n  // eslint-disable-next-line no-unused-vars\n  let [searchParams, setSearchParams] = useSearchParams();\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFilm(film);\n\n    setSearchParams({ query: film });\n    if (film === '') {\n      toast.error('Enter something into input');\n    }\n\n    onSubmit(film);\n  };\n\n  const handleChange = e => {\n    setFilm(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"form\">\n      <input onChange={handleChange} />\n      <button type=\"submit\" className=\"form-button\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nexport default MoviesForm;\n","import { useState, useEffect } from 'react';\nimport MoviesForm from 'components/MoviesForm';\nimport { Link } from 'react-router-dom';\nimport { SearchFilm } from 'services/API';\nimport { toast } from 'react-toastify';\nimport { TailSpin } from 'react-loader-spinner';\nimport '../../css/MoviesPage.modules.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MoviesPage = () => {\n  const [film, setFilm] = useState('');\n  const [films, setFilms] = useState([]);\n  const [status, setStatus] = useState('idle');\n\n  useEffect(() => {\n    if (film === '') {\n      return;\n    }\n    async function request() {\n      setStatus('pending');\n      try {\n        const films = await SearchFilm(film);\n        if (films.length === 0) {\n          setStatus('resolved');\n          return toast.error('Enter the correct value in the field');\n        }\n        setFilms(films);\n      } catch (error) {\n        setStatus('rejected');\n      }\n      setStatus('resolved');\n    }\n    request();\n  }, [film]);\n\n  const handleSubmit = film => {\n    console.log(film);\n    setFilm(film);\n  };\n\n  if (status === 'pending') {\n    return <TailSpin />;\n  }\n  if (status === 'rejected') {\n    return toast.error(' Something went wrong');\n  }\n\n  return (\n    <div className=\"movies-section\">\n      <MoviesForm onSubmit={handleSubmit} />\n      <ul className=\"movies-list\">\n        {status === 'resolved' &&\n          films.map(film => {\n            return (\n              <li key={film.id} className=\"movies-item\">\n                <Link to={`${film.id}`} className=\"movies-link\">\n                  {film.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '553dbf56094ae628f1a56828e9f90068';\n\nconst SearchFilm = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return response.data.results;\n};\n\nconst requestTrendingFilms = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  console.log(response);\n  return response.data.results;\n};\n\nconst requestMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nconst requestMovieCredits = async movieID => {\n  const response = await axios.get(\n    `movie/${movieID}/credits?api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data.cast;\n};\n\nconst requestReviews = async movieID => {\n  const response = await axios.get(\n    `movie/${movieID}/reviews?api_key=${API_KEY}&language=en-US`\n  );\n  console.log(response);\n  return response.data.results;\n};\nconst genresRequest = async () => {\n  const response = await axios.get(\n    `genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.results;\n};\n\nexport {\n  SearchFilm,\n  requestTrendingFilms,\n  requestMovieDetails,\n  requestMovieCredits,\n  requestReviews,\n  genresRequest,\n};\n"],"names":["onSubmit","useState","film","setFilm","useSearchParams","setSearchParams","e","preventDefault","query","toast","className","onChange","target","value","type","films","setFilms","status","setStatus","useEffect","SearchFilm","length","request","console","log","map","to","id","title","axios","API_KEY","response","data","results","requestTrendingFilms","requestMovieDetails","movieId","requestMovieCredits","movieID","cast","requestReviews"],"sourceRoot":""}